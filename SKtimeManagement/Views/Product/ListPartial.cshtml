@model SKtimeManagement.ProductList
@{
    var id = Guid.NewGuid().ToString();
    var tags = Guid.NewGuid().ToString();
    var html = String.Format(@"<div><a id=""view"" href=""{0}"" class=""button-icon view""></a>", Url.Action("ListByTag", "Product", new { id = "_ID" }));
}
<div class="tabs">
    <div id="heads">
        <span class="active">Sản phẩm</span>
        <a href="@Url.Action("List", "Tag")" target="_self" for="main-content" ptitle="Nhóm sản phẩm">Nhóm sản phẩm</a>
        <a href="@Url.Action("List", "Warehouse")" target="_self" for="main-content" ptitle="Kho hàng">Kho hàng</a>
        <a href="@Url.Action("List", "Supplier")" target="_self" for="main-content" ptitle="Nhà cung cấp">Nhà cung cấp</a>
    </div>
</div>
@if (!String.IsNullOrEmpty(Model.Message))
{
    <div class="text-center">
        <i class="text-info">@Html.Raw(Model.Message)</i>
    </div>
}
<div class="flexible">
    <div class="w25">
        <div id="filter" class="group">
            <h3 class="head-line">Tìm kiếm</h3>
            <div id="content">
                <form action="@Url.Action("List", "Product")" method="post" for="main-content" ptitle="Sản phẩm">
                    <div>
                        <label>Mã:</label><input class="input" type="text" name="Code" value="@Model.Filter.Code" />
                    </div>
                    <div>
                        <label>Tên:</label><input class="input" type="text" name="Name" value="@Model.Filter.Name" />
                    </div>
                    @*<div>
                        <label>Kho hàng:</label>
                        <span>
                            <select name="WarehouseID" data="@Url.Action("AuthorizedWarehouse", "Login")" value="@Model.Filter.WarehouseID">
                                <option>None</option>
                            </select>
                        </span>
                    </div>*@

                    <div>
                        <label>Nhóm sản phẩm:</label>
                        <div class="inline">
                            <div id="search-tag" class="table-row">
                                <div><input type="text" placeholder="Tìm theo tên" /></div>
                                <div><span class="button small search"></span></div>
                            </div>
                            <span>
                                <select name="TagID" data="@Url.Action("KeyList", "Tag")" value="@Model.Filter.TagID">
                                    <option value="">None</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div class="text-right">
                        <input type="submit" value="Tìm" url="@Url.Action("List", "Product")" class="search" />
                        <a href="@Url.Action("Create", "Product" )" target="_self" class="button add" for="pop-up-content" ptitle="Sản phẩm">Tạo mới</a>
                        <a href="@Url.Action("Import", "Product" )" target="_self" class="button save" for="pop-up-content" ptitle="Sản phẩm">Import</a>
                    </div>
                </form>
            </div>
        </div>
        <div id="tags-list" class="group">
            <h3 class="head-line">Nhóm sản phẩm</h3>
            <div id="content">
                <div class="tbl">
                    <table keys="ID" data="@tags">
                        <thead>
                            <tr>
                                <td width="50"></td>
                                <td name="Name"><div>Tên</div></td>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="w75">
        <p>Tổng cộng: <span class="text-info">@Model.Data.Count</span></p>
        <span id="product-download" class="button save">Xuất Excel</span>
        <span id="all-download" class="button save">Danh sách sản phẩm</span>
        <div id="product" class="tbl">
            <table id="product-table" data="@id" key="ID" view="@Url.Action("Detail", "Product", new { id = "{ID}" })" update="@Url.Action("Update", "Product", new { id = "{ID}" })" remove="@Url.Action("Remove", "Product", new { id = "{ID}" })" ptitle="Sản phẩm ">
                <thead>
                    <tr>
                        <td width="110"></td>
                        <td name="TagName"><div>Nhóm SP</div></td>
                        <td name="Code"><div>Mã vạch</div></td>
                        <td name="Name"><div>Tên</div></td>
                        <td name="Unit"><div>Đơn vị tính</div></td>
                        <td name="QuantityString" text="right"><div>Tổng tồn</div></td>
                        <td name="PriceString" text="right"><div>Giá bán lẻ</div></td>
                        <td name="PointString" text="right"><div>Điểm tích lũy</div></td>
                        <td name="MadeIn"><div>Xuất xứ</div></td>
                        <td name="OriginalWarranty"><div>Bảo hành (chính hãng)</div></td>
                        <td name="BussinessWarranty"><div>Bảo hành (đơn vị)</div></td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
@{
    var scripts = new List<string>();
    if (Model.Data != null)
    {
        var jsonData = Html.JsonSerialize(Model.Data);
        scripts.Add("_TableFunctions.Data.push({" + String.Format("id: '{0}',data: JSON.parse('{1}', _TableFunctions.JsonParse)", id, jsonData) + "});");
        if (Model.Tags.Count > 0)
        {
            scripts.Add("_TableFunctions.Data.push({" + String.Format("id: '{0}',data: JSON.parse('{1}', _TableFunctions.JsonParse)", tags, Html.JsonSerialize(Model.Tags)) + "});");
        }
    }
    scripts.Add(String.Format("var _html = '{0}'", html));
}
@Html.Raw(String.Format("<script>{0}</script>", String.Join("", scripts)))
<script>
    _TableFunctions.Init({ e: '#product' });
    _TableFunctions.Init({
        e: '#tags-list',
        input: {
            id: '@tags',
            input: [
                {
                    html: _html,
                    event: [
                        {
                            id: 'view',
                            key: 'click',
                            handler: function () {
                                AjaxRequest({
                                    url: $(this).attr('href'),
                                    success: function (data) {
                                        if (data.html) {
                                            $('#main-content').html(data.html);
                                            ProcessForms('#main-content');
                                            ProcessLinks('#main-content');
                                        }
                                    }
                                });
                                return false;
                            }
                        }
                    ]
                }
            ]
        }
    });
    _TableFunctions.RefreshData();
    $('#filter #search-supplier .button').on('click', function () {
        var name = $('#filter #search-supplier input').val(),
            url = '@Url.Action("Find", "Supplier", new { id = "_Name" })',
            val = $('#filter select[name="SupplierID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (item, index) {
                            html += '<option value="' + item.ID + '" ' + (item.ID.toString() == val ? 'selected' : '') + '>' + item.Name + '</option>';
                        });
                        $('#filter select[name="SupplierID"]').html(html);
                    }
                }
            });
        }
    });
    $('#product-download').on('click', function () {
        var formData = new FormData();
        $.each($('#filter form').serializeArray(), function (i, field) {
            //console.log(field.name + ', ' + field.value);
            formData.append(field.name, field.value);
        });
        AjaxRequest({
            url: '@Url.Action("Download", "Product")',
            data: formData,
            type: 'post',
            processData: false,
            success: function (data) {
                if (data.result) {
                    window.location = '@Url.Action("Download", "Product")';
                }
            }
        });
    });
    $('#all-download').on('click', function () {
        var formData = new FormData();
        $.each($('#filter form').serializeArray(), function (i, field) {
            //console.log(field.name + ', ' + field.value);
            formData.append(field.name, field.value);
        });
        AjaxRequest({
            url: '@Url.Action("DownloadAll", "Product")',
            data: formData,
            type: 'post',
            processData: false,
            success: function (data) {
                if (data.result) {
                    window.location = '@Url.Action("Download", "Product")';
                }
            }
        });
    });
</script>