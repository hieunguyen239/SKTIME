@model SKtimeManagement.ProductList
@{ 
    var id = Guid.NewGuid().ToString();
}
<div class="tabs">
    <div id="heads">
        <span class="active">Tồn kho</span>
        <a href="@Url.Action("Find", "Product")" target="_self" for="main-content" ptitle="Sản phẩm">Kiểm hàng</a>
    </div>
</div>
<div class="flexible">
    <div class="w25">
        <div id="filter" class="group">
            <h3 class="head-line">Tìm kiếm</h3>
            <div id="content">
                <form action="@Url.Action("Check", "Product")" method="post" for="main-content" ptitle="Sản phẩm">
                    <div>
                        <label>Mã:</label><input class="input" type="text" name="Code" value="@Model.Filter.Code" />
                    </div>
                    <div>
                        <label>Tên:</label><input class="input" type="text" name="Name" value="@Model.Filter.Name" />
                    </div>
                    <div>
                        <label>Kho hàng:</label>
                        <span>
                            <select name="WarehouseID">
                                <option>Tất cả</option>
                                @foreach (var wh in Model.Warehouses)
                                {
                                    <option value="@wh.ID" @(Model.Filter.WarehouseID == wh.ID ? "selected" : "")>@wh.Name</option>
                                }
                            </select>
                        </span>
                    </div>
                    <div>
                        <label>Nhóm sản phẩm:</label>
                        <div class="inline">
                            <div id="search-tag" class="table-row">
                                <div><input type="text" placeholder="Tìm theo tên" /></div>
                                <div><span class="button small search"></span></div>
                            </div>
                            <span>
                                <select name="TagID" data="@Url.Action("KeyList", "Tag")" value="@Model.Filter.TagID">
                                    <option value="">None</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div>
                        <label>Tìm hàng đổi:</label>
                        <input type="checkbox" name="Returned" @(Model.Filter.Returned == "on" ? "checked=\"checked\"" : "") />
                    </div>
                    <div>
                        <label>Từ:</label>
                        <div class='input-group date'>
                            <input type='text' class="form-control input" name="From" value="@(Model.Filter.From.HasValue ? Model.Filter.From.Value.ToString(Constants.DateTimeString) : "")" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div>
                        <label>Đến:</label>
                        <div class='input-group date'>
                            <input type='text' class="form-control input" name="To" value="@(Model.Filter.To.HasValue ? Model.Filter.To.Value.ToString(Constants.DateTimeString) : "")" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="text-right">
                        <input type="submit" value="Tìm" url="@Url.Action("Check", "Product")" class="search" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="w75">
        <p>Tổng cộng: <span class="text-info">@Model.Data.Count</span></p>
        <span id="product-download" class="button save">Xuất Excel</span>
        <div class="flexible">
            <div class="w25">
                <label>Tổng nhập:</label><span class="info">@Model.Data.Sum(i => i.ImportQuantity).GetCurrencyString()</span>
            </div>
            <div class="w25">
                <label>Tổng xuất</label><span class="info">@Model.Data.Sum(i => i.ExportQuantity).GetCurrencyString()</span>
            </div>
            <div class="w25">
                <label>Tổng bán</label><span class="info">@Model.Data.Sum(i => i.SaleQuantity).GetCurrencyString()</span>
            </div>
            <div class="w25">
                <label>Tổng tồn cuối kỳ:</label><span class="info">@Model.Data.Sum(i => i.EndQuantity).GetCurrencyString()</span>
            </div>
        </div>
        <div id="product" class="tbl">
            <table data="@id">
                <thead>
                    <tr>
                        <td name="TagName"><div>Nhóm</div></td>
                        <td name="Code"><div>Mã</div></td>
                        <td name="Name"><div>Tên</div></td>
                        <td name="Unit"><div>ĐVT</div></td>
                        <td name="WarehouseName"><div>Kho</div></td>
                        <td name="StartQuantityString" text="right"><div>Tồn đầu kỳ</div></td>
                        <td name="ImportQuantityString" text="right"><div>Nhập</div></td>
                        <td name="ExportQuantityString" text="right"><div>Xuất</div></td>
                        <td name="EndQuantityString" text="right"><div>Tồn cuối kỳ</div></td>
                        <td name="SaleQuantityString" text="right"><div>Số lượng bán</div></td>
                        <td name="ReturnedString" text="right"><div>Số lượng trả</div></td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
@{
    var scripts = new List<string>();
    if (Model.Data != null)
    {
        var script = String.Join(",", Model.Data.Select(i => String.Format("{{ {0}, Name: '{1}' }}",
            i.Json, i.ID > 0 ? String.Format("<a href=\"{0}\" target=\"_self\" for=\"pop-up-content\" changeurl=\"false\">{1}</a>", Url.Action("Detail", "Product", new { id = i.ID }), i.Name) : i.Name)));
        //var jsonData = Html.JsonSerialize(Model.Data);
        scripts.Add("_TableFunctions.Data.push({" + String.Format("id: '{0}',data: [{1}]", id, script) + "});");
    }
}
@Html.Raw(String.Format("<script>{0}</script>", String.Join("", scripts)))
<script>
    _TableFunctions.Init({ e: '#product' });
    _TableFunctions.RefreshData();
    $('#filter #search-supplier .button').on('click', function () {
        var name = $('#filter #search-supplier input').val(),
            url = '@Url.Action("Find", "Supplier", new { id = "_Name" })',
            val = $('#filter select[name="SupplierID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (item, index) {
                            html += '<option value="' + item.ID + '" ' + (item.ID.toString() == val ? 'selected' : '') + '>' + item.Name + '</option>';
                        });
                        $('#filter select[name="SupplierID"]').html(html);
                    }
                }
            });
        }
    });
    $('#product-download').on('click', function () {
        var formData = new FormData();
        $.each($('#filter form').serializeArray(), function (i, field) {
            //console.log(field.name + ', ' + field.value);
            formData.append(field.name, field.value);
        });
        AjaxRequest({
            url: '@Url.Action("DownloadCheck", "Product")',
            data: formData,
            type: 'post',
            processData: false,
            success: function (data) {
                if (data.result) {
                    window.location = '@Url.Action("Download", "Product")';
                }
            }
        });
    });
</script>