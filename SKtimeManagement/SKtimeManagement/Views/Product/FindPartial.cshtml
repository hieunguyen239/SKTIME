@model SKtimeManagement.FindList
<div class="tabs">
    <div id="heads">
        <a href="@Url.Action("Check", "Product")" target="_self" for="main-content" ptitle="Sản phẩm">Tồn kho</a>
        <span class="active">Kiểm hàng</span>
    </div>
</div>
<div class="flexible">
    <div class="w25">
        <div id="filter" class="group">
            <h3 class="head-line">Tìm kiếm</h3>
            <div id="content">
                <form action="@Url.Action("Find", "Product")" method="post" for="product-list" ptitle="Sản phẩm">
                    <div>
                        <label>Mã:</label><input class="input" type="text" name="Code" value="@Model.Filter.Code" />
                    </div>
                    <div>
                        <label>Tên:</label><input class="input" type="text" name="Name" value="@Model.Filter.Name" />
                    </div>
                    <div>
                        <label>Kho hàng:</label>
                        <span>
                            <select name="WarehouseID">
                                @foreach (var wh in Model.Warehouses)
                                {
                                    <option value="@wh.ID" @(Model.Filter.WarehouseID == wh.ID ? "selected" : "")>@wh.Name</option>
                                }
                            </select>
                        </span>
                    </div>
                    <div>
                        <label>Nhóm sản phẩm:</label>
                        <div class="inline">
                            <div id="search-tag" class="table-row">
                                <div><input type="text" placeholder="Tìm theo tên" /></div>
                                <div><span class="button small search"></span></div>
                            </div>
                            <span>
                                <select name="TagID" data="@Url.Action("KeyList", "Tag")" value="@Model.Filter.TagID">
                                    <option value="">None</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div class="text-right">
                        <input type="submit" value="Tìm" url="@Url.Action("Find", "Product")" class="search" />
                    </div>
                </form>
            </div>
        </div>
        <div class="group">
            <h3 class="head-line">Sản phẩm vừa tìm</h3>
            <div id="content" class="text-center">
                <img id="recent-image" class="thumb" src="@Url.Content("~/Content/Images/image-not-found.png")"/><br />
                <strong id="recent-name"></strong><br />
                <strong id="recent-code"></strong>
            </div>
        </div>
    </div>
    <div class="w75">
        @{ 
            var warehouse = Model.Filter != null && Model.Filter.WarehouseID.HasValue ? Model.Warehouses.FirstOrDefault(i => i.ID == Model.Filter.WarehouseID) : Model.Warehouses.FirstOrDefault();
        }
        @if (warehouse != null)
        {
            <div>
                <span>Kho: <strong id="warehouse-name">@warehouse.Name</strong></span><br />
                <span>Tổng tồn: <strong id="warehouse-total">@Model.Data.Where(i => i.Exist).Sum(i => i.Max).GetCurrencyString()</strong></span><br />
                <span>Tổng tìm: <strong id="find-total">@Model.Data.Sum(i => i.Quantity).GetCurrencyString()</strong></span><br />
            </div>
            <form id="find-finish" action="@Url.Action("FindFinish", "Product")" method="post" for="main-content" ptitle="Sản phẩm">
                <input type="hidden" name="warehouseID" value="@warehouse.ID" />
                <input type="hidden" name="tagID" value="@Model.Filter.TagID" />
                <input type="submit" value="Kết thúc" url="@Url.Action("FindFinish", "Product")" class="search" />
                <span id="product-download" class="button save">Xuất Excel</span>
                <div class="flexible text-center">
                    <div class="w25">
                        Đủ hàng: <strong id="enough-total">@Model.Data.Count(i => i.Exist && i.Quantity == i.Max).GetCurrencyString()</strong>
                    </div>
                    <div class="w25">
                        Thiếu hàng: <strong id="missing-total">@Model.Data.Count(i => i.Exist && i.Quantity < i.Max).GetCurrencyString()</strong>
                    </div>
                    <div class="w25">
                        Dư hàng: <strong id="more-total">@Model.Data.Count(i => i.Exist && i.Quantity > i.Max).GetCurrencyString()</strong>
                    </div>
                    <div class="w25">
                        Không tồn tại: <strong id="not-found-total">@Model.Data.Count(i => !i.Exist).GetCurrencyString()</strong>
                    </div>
                </div>
                <div id="product" class="tbl">
                    <table>
                        <thead>
                            <tr id="head">
                                <td name="Info"><div>Thông tin</div></td>
                                <td name="TagName"><div>Nhóm</div></td>
                                <td name="Code"><div>Mã</div></td>
                                <td name="Name"><div>Tên</div></td>
                                <td name="WarehouseName"><div>Kho</div></td>
                                <td name="Unit"><div>ĐVT</div></td>
                                <td name="QuantityString" text="right"><div>Tồn kho</div></td>
                                <td name="FindQuantityString" text="right"><div>Số lượng tìm</div></td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </form>
        }
    </div>
    <div id="product-list"></div>
</div>
@{ 
    var script = "";
    if (Model.Data.Count > 0)
    {
        script = String.Join(",", Model.Data.Select(i => String.Format("{{ {0}, Name: '{1}' }}", 
            i.Json, i.ID > 0 ? String.Format("<a href=\"{0}\" target=\"_self\" for=\"pop-up-content\" changeurl=\"false\">{1}</a>", Url.Action("Detail", "Product", new { id = i.ID }), i.Name) : i.Name)));
    }
}
<script>
    var _products = [@Html.Raw(script)];
    var _imgUrl = '@Url.Content("~/Media/Product/_Name")';
    var _proUrl = '@Url.Action("Detail", "Product", new { id = "_ID" })';
    var _unavailable = '@Url.Content("~/Content/Images/image-not-found.png")';
    function RecentImage(data) {
        if (data.img != undefined && data.img != '') {
            $('#recent-image').attr('src', _imgUrl.replace('_Name', data.img));
        }
        $('#recent-code').html(data.code);
        $('#recent-name').html(data.name);
    }
    function RefreshProductList() {
        $('#product table tbody').html('');
        $('#filter input[name="Code"]').val('');
        var wTotal = 0, fTotal = 0,
            enough = 0, missing = 0, more = 0, notFound = 0;
        if (_products.length > 0) {
            _products.forEach(function (p, i) {
                wTotal += p.ID > 0 ? p.Max : 0;
                fTotal += p.Quantity;
                var color = '';
                var message = 'Đủ hàng';
                var value = '<input type="hidden" name="items[' + i + '].Code" value="' + p.Code + '"/>' +
                            '<input type="hidden" name="items[' + i + '].Quantity" value="' + p.Quantity + '"/>';
                if (!p.Exist) {
                    color = 'red';
                    message = 'Không tồn tại';
                    notFound += p.Quantity;
                }
                else if (p.Quantity > p.Max) {
                    color = 'green';
                    message = 'Dư hàng(' + (p.Max - p.Quantity) + ')';
                    more += p.Quantity;
                }
                else if (p.Quantity < p.Max) {
                    color = 'orange';
                    message = 'Thiếu hàng(' + (p.Quantity - p.Max) + ')';
                    missing += p.Quantity;
                }
                else {
                    enough += p.Quantity;
                }
                $('#product table tbody').append(
                    '<tr class="data" color="' + color + '">' +
                        '<td><div><span>' + message + '</span></div></td>' +
                        '<td><div><span>' + p.Tag + '</span></div></td>' +
                        '<td><div><span>' + p.Code + '</span>' + value + '</div></td>' +
                        '<td><div><span>' + p.Name + '</span></div></td>' +
                        '<td><div><span>' + p.Warehouse + '</span></div></td>' +
                        '<td><div><span>' + p.Unit + '</span></div></td>' +
                        '<td><div text="right"><span>' + GetCurrencyString(p.Max) + '</span></div></td>' +
                        '<td><div text="right"><span>' + GetCurrencyString(p.Quantity) + '</span></div></td>' +
                    '</tr>'
                );
            });
        }
        $('#warehouse-total').html(GetCurrencyString(wTotal));
        $('#find-total').html(GetCurrencyString(fTotal));
        $('#enough-total').html(GetCurrencyString(enough));
        $('#more-total').html(GetCurrencyString(more));
        $('#missing-total').html(GetCurrencyString(missing));
        $('#not-found-total').html(GetCurrencyString(notFound));
        ProcessLinks('#product');
    }
    $('#filter [name="WarehouseID"]').on('change', function () {
        $('#warehouse-name').html($('#filter [name="WarehouseID"] option[value="' + $(this).val() + '"]').html());
        $('#find-finish [name="warehouseID"]').val($(this).val());
        _products = [];
        RefreshProductList();
    });
    $('#filter [name="TagID"]').on('change', function () {
        $('#find-finish [name="tagID"]').val($(this).val());
    });
    RefreshProductList();
    $('#product-download').on('click', function () {
        var formData = new FormData();
        $.each($('#find-finish').serializeArray(), function (i, field) {
            //console.log(field.name + ', ' + field.value);
            formData.append(field.name, field.value);
        });
        AjaxRequest({
            url: '@Url.Action("FindDownload", "Product")',
            data: formData,
            type: 'post',
            processData: false,
            success: function (data) {
                if (data.result) {
                    window.location = '@Url.Action("Download", "Product")';
                }
            }
        });
    });
</script>