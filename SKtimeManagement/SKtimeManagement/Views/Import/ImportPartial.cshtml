@model SKtimeManagement.Import

<div class="tabs">
    <div id="heads">
        <span class="active">Nhập kho</span>
        <a href="@Url.Action("Create", "Export")" target="_self" for="main-content" ptitle="Xuất kho">Xuất kho</a>
        <a href="@Url.Action("Create", "Order")" target="_self" for="main-content" ptitle="Hóa đơn">Hóa đơn</a>
    </div>
</div>
<div id="import" class="flexible">
    <div id="selector" class="w25">
        <div class="group">
            <h3 class="head-line">Tìm sản phẩm</h3>
            <div id="content">
                <form action="@Url.Action("ProductList", "Import")" method="post" for="products" ptitle="Nhập kho">
                    <input type="hidden" name="Action" value="@(Model.ID > 0 ? DbAction.Import.Modify : DbAction.Import.Create)"/>
                    <div>
                        <label>Kho:</label>
                        <select name="WarehouseID">
                            @foreach (var warehouse in Model.Warehouses)
                            {
                                <option value="@warehouse.ID" @(Model.SelectedWarehouse == warehouse.ID ? "selected" : "")>@warehouse.Name</option>
                            }
                        </select>
                    </div>

                    <div>
                        <label>Mã:</label><input class="input" type="text" name="Code" value="@Model.Filter.Code" />
                    </div>
                    <div>
                        <label>Tên:</label><input class="input" type="text" name="Name" value="@Model.Filter.Name" />
                    </div>
                    <div>
                        <label>Nhóm sản phẩm:</label>
                        <div class="inline">
                            <div id="search-tag" class="table-row">
                                <div><input type="text" placeholder="Tìm theo tên" /></div>
                                <div><span class="button small search"></span></div>
                            </div>
                            <span>
                                <select name="TagID" data="@Url.Action("KeyList", "Tag")" value="@Model.Filter.TagID">
                                    <option value="">None</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div class="text-right">
                        <input type="submit" value="Tìm" class="search" />
                        <a href="@Url.Action("Create", "Import" )" target="_self" class="button add" for="main-content" ptitle="Nhập kho">Tạo mới</a>
                        <a href="@Url.Action("History", "Import" )" target="_self" class="button view" for="main-content" ptitle="Nhập kho">Lịch sử nhập kho</a>
                    </div>
                </form>
            </div>
        </div>
        <div id="products" class="group">
            @Html.Partial("Selector", Model.Data)
        </div>
    </div>
    <div class="w75">
        <div class="text-center">
            <h3>Nhập kho</h3>
        </div>
        <div class="text-center @(Model.Result ? "text-info" : "text-danger")">
            <i id="import-message">@Html.Raw(Model.Message)</i>
        </div>
        <div id="list">
            <form action="@Url.Action("Submit", "Import")" method="post" ptitle="Nhập kho" for="main-content">
                <input type="hidden" name="id" value="@Model.ID" />
                <div class="flexible">
                    @if (Model.ID > 0)
                    {
                        <div class="w100">
                            <div>
                                <label>Mã:</label><span class="info"><strong>@Model.Code</strong></span>
                            </div>
                        </div>
                    }
                    @*<div class="w100">
                        <div>
                            <label>Biên nhận:</label>
                            <input class="input" type="text" name="receipt" value="@Model.Receipt" maxlength="100" />
                        </div>
                    </div>*@
                    <div class="w50">
                        <div>
                            <label>Ghi chú:</label>
                            <input class="input" type="text" name="note" value="@Model.Note" maxlength="200" />
                        </div>
                        <div>
                            <label>Nhập từ file:</label>
                            <input type="file" id="import-file" />
                        </div>
                        <div>
                            <label>File mẫu:</label>
                            <a href="@Url.Action("UploadTemplate", "Import")" target="_blank" class="button save">Tải về</a>
                        </div>
                    </div>
                    <div class="w50">
                        <div>
                            <label>Nhân viên:</label><span class="info">@Model.EmployeeName</span>
                            @*<div class="inline">
                                <div id="search-employee" class="table-row">
                                    <div><input type="text" placeholder="Tìm theo tên" /></div>
                                    <div><span class="button small search"></span></div>
                                </div>
                                <select name="employeeID" data="@Url.Action("DataList", "Employee")" value="@Model.EmployeeID">
                                    <option value="0">None</option>
                                </select>
                            </div>*@
                        </div>
                        <div>
                            <label>Số lượng:</label><span id="total-quantity" class="info">@(Model != null ? Model.Selected.Sum(i => i.Quantity).GetCurrencyString() : "0")</span>
                        </div>
                    </div>
                </div>
                <div id="import-products">
                    <div class="tabs inline">
                        <div id="heads">
                            
                        </div>
                    </div>
                </div>
                <div class="text-right">
                    <input type="submit" value="Lưu phiếu" class="save hidden" />
                    <a href="@Url.Action("History", "Import")" target="_self" for="main-content" ptitle="Nhập kho" class="button cancel">Hủy</a>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="import-data"></div>
<div id="import-template" class="hidden">
    <div class="tbl" style="margin-top: 0">
        <table>
            <thead>
                <tr id="head">
                    <td width="50"></td>
                    <td>Mã SP</td>
                    <td>Tên</td>
                    <td>Số lượng</td>
                    <td>Giá nhập</td>
                    <td width="150">Thành tiền (VND)</td>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <td colspan="5"><div class="text-right">Tổng cộng:</div></td>
                    <td><div class="text-right"><strong id="grand-total">0</strong></div></td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
<script>
    var _importData = [];
    var _whid = @Model.SelectedWarehouse.DbValue();
    var _productUrl = '@Url.Action("Detail", "Product", new { ID = "_ID" })';
    NumberInput('#import-products');
    function _NewProductList(whid, active) {
        var id = 'wh' + whid,
            name = $('#import #selector [name="WarehouseID"] option[value="' + whid + '"]').html();
        $('#import-products #heads').append('<span for="' + id + '" class="' + (active ? 'active' : '') + '">' + name + '</span>');
        var template = $('#import-template').html();
        $('#import-products').append('<div id="' + id + '" class="tab-body ' + (active ? '' : 'hidden') + '">' + template + '</div>');
    }
    function _RefreshImportList() {
        var id = Math.floor(Date.now())
        $('#import-products').html('<div class="tabs inline"><div id="heads"></div></div>');
        if (_importData.length > 0) {
            var active = true;
            var index = 0;
            _importData.forEach(function (p, i) {
                if ((_whid == null || (_whid != null && p.WarehouseID == _whid)) && $('#import #selector [name="WarehouseID"] option[value="' + p.WarehouseID + '"]').length > 0) {
                    var head = $('#import-products #heads [for="wh' + p.WarehouseID + '"]');
                    if (head.length == 0) {
                        _NewProductList(p.WarehouseID, active);
                        active = false;
                    }
                    var name = '<a href="' + _productUrl.replace('_ID', p.ID) + '" target="_self" for="pop-up-content" changeurl="false" ptitle="Nhập kho">' + p.Name + '</a>';
                    $('#import-products #wh' + p.WarehouseID + ' tbody').append(
                        '<tr class="data">' +
                        '<td><div><span class="button-icon remove" dti="' + index + '"></span><input type="hidden" name="items[' + index + '].ID" value="' + p.ID + '" /><input type="hidden" name="items[' + index + '].WarehouseID" value="' + p.WarehouseID + '" /></div></td>' +
                        '<td><div><span id="code">' + p.Code + '</span><input type="hidden" name="items[' + index + '].Code" value="' + p.Code + '" /></div></td>' +
                        '<td><div><span id="name">' + name + '</span><input type="hidden" name="items[' + index + '].Name" value="' + p.Name + '" /></div></td>' +
                        '<td><div text="right"><div class="input-number flexible"><div id="input"><input dti="' + index + '" class="input" type="number" name="items[' + index + '].Quantity" value="' + p.Quantity + '" min="0" /></div></div></div></td>' +
                        '<td><div text="right"><span>' + p.PriceString + '</span><input type="hidden" name="items[' + index + '].Price" value="' + p.Price + '" /></div></td>' +
                        //'<td><div text="right"><div class="input-number flexible"><div id="input"><input dti="' + index + '" class="input" type="number" name="items[' + index + '].Price" value="' + p.Price + '" min="0" /></div></div></div></td>' +
                        '<td><div text="right"><span id="total-' + index + '">' + p.Total + '</span></div></td>' +
                        '</tr>'
                    );
                    index++;
                }
            });
            $('#import-products tbody .remove').on('click', function () {
                var index = $(this).attr('dti');
                if (index) {
                    index = parseInt(index);
                    _importData.splice(index, 1);
                    _RefreshImportList();
                }
            });
            $('#import-products tbody input[name]').on('change', _RefreshImportItem);
            $('#import #list input[type="submit"]').removeClass('hidden');
            NumberInput('#import-products tbody');
            ProcessLinks('#import-products tbody');
        }
        else {
            $('#import #list input[type="submit"]').addClass('hidden');
        }
        GrandTotal();
    }
    function _RefreshImportItem() {
        var index = $(this).attr('dti');
        if (index) {
            index = parseInt(index);
            var wid = $('#import-products select[name="items[' + index + '].WarehouseID"]').val(),
                price = $('#import-products input[name="items[' + index + '].Price"]').val(),
                qty = $('#import-products input[name="items[' + index + '].Quantity"]').val();
            if (wid) {
                _importData[index].WarehouseID = parseInt(wid);
            }
            if (price) {
                _importData[index].Price = parseFloat(price);
            }
            if (qty) {
                _importData[index].Quantity = parseInt(qty);
            }
            _importData[index].Total = parseInt(parseFloat(price) * parseInt(qty));
            $('#import-products #total-' + index).html(GetCurrencyString(_importData[index].Total));
            GrandTotal();
        }
    }
    function GrandTotal() {
        var total = 0, quantity = 0;
        var warehouses = [];
        _importData.forEach(function (item, index) {
            var wh = warehouses.filter(function (value, index) {
                return value.id == item.WarehouseID;
            });
            if (wh.length == 0) {
                warehouses.push({
                    id: item.WarehouseID,
                    total: item.Price * item.Quantity,
                    quantity: item.Quantity
                });
            }
            else {
                wh[0].total += item.Price * item.Quantity;
                wh[0].quantity += item.Quantity;
            }
            quantity += item.Quantity;
        });
        warehouses.forEach(function (wh, index) {
            $('#import-products #wh' + wh.id + ' #grand-total').html(GetCurrencyString(wh.total));
        });
        $('#total-quantity').html(GetCurrencyString(quantity));;
    }
    $('#import-file').on('change', function () {
        var files = this.files;
        for (var i = 0; i < files.length; i++) {
            var data = new FormData();
            data.append(files[i].name, files[i]);
            AjaxRequest({
                url: '@Url.Action("UploadFile", "Import")',
                type: 'post',
                data: data,
                processData: false,
                success: function (data) {
                    if (data.list) {
                        data.list.forEach(function (item, index) {
                            _importData.push(item);
                        });
                        _RefreshImportList();
                        ProcessSelects('#import-products tbody');
                    }
                    if (data.message != '') {
                        $('#import-message').attr('class', '');
                        $('#import-message').attr('class', data.result ? 'text-info' : 'text-danger');
                        $('#import-message').html(data.message);
                    }
                    //console.log('saved');
                },
                uploadProgress: function (progress) {
                    //console.log(progress);
                }
            });
        }
        $(this).val('');
    });
    $('#import #selector #search-tag .button').on('click', function () {
        var name = $('#import #selector #search-tag input').val(),
            url = '@Url.Action("Find", "Tag", new { id = "_Name" })',
            val = $('#import #selector select[name="TagID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (item, index) {
                            html += '<option value="' + item.ID + '" ' + (item.ID.toString() == val ? 'selected' : '') + '>' + item.Name + '</option>';
                        });
                        $('#import #selector select[name="TagID"]').html(html);
                    }
                }
            });
        }
    });
    $('#import #list #search-employee .button').on('click', function () {
        var name = $('#import #list #search-employee input').val(),
            url = '@Url.Action("Find", "Employee", new { id = "_Name" })',
            val = $('#import #list select[name="employeeID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (employee, index) {
                            html += '<option value="' + employee.ID + '" ' + (employee.ID.toString() == val ? 'selected' : '') + '>' + employee.Name + '</option>';
                        });
                        $('#import #list select[name="employeeID"]').html(html);
                    }
                }
            });
        }
    });
    $('#import #list select[name="warehouseID"]').on('change', function () {
        $('#import #selector input[name="WarehouseID"]').val($(this).val());
    });
</script>
@{
    var script = "";
    if (Model != null)
    {
        script = String.Format("<script>{0}_RefreshImportList();</script>", 
            String.Join("", Model.Selected.Select(i => String.Format("_importData.push({0});", i.JsObject)))
        );
    }
}
@Html.Raw(script)