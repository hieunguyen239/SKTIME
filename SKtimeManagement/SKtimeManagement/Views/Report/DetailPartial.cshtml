@model SKtimeManagement.Report
<div class="tabs">
    <div id="heads">
        <a href="@Url.Action("Summary", "Report")" target="_self" for="main-content" ptitle="Thống kê">Tổng quát</a>
        <span class="active">Chi tiết</span>
        <a href="@Url.Action("Product", "Report")" target="_self" for="main-content" ptitle="Thống kê">Sản phẩm</a>
        <a href="@Url.Action("Salary", "Report")" target="_self" for="main-content" ptitle="Thống kê">Lương</a>
        <a href="@Url.Action("Client", "Report")" target="_self" for="main-content" ptitle="Thống kê">Khách hàng</a>
        <a href="@Url.Action("ProductPart", "Report")" target="_self" for="main-content" ptitle="Thống kê">Linh kiện</a>
    </div>
</div>
<div id="report" class="flexible">
    <div class="w25">
        <div id="filter" class="group">
            <h3 class="head-line">Tìm kiếm</h3>
            <div id="content">
                <form action="@Url.Action("Detail", "Report")" method="post" for="main-content" ptitle="Thống kê">
                    <div>
                        <label>Kho:</label>
                        <select name="WarehouseID" data="@Url.Action("AuthorizedWarehouse", "Login")" value="@Model.Filter.WarehouseID">
                            <option>None</option>
                        </select>
                    </div>
                    <div>
                        <label>Nhân viên:</label>
                        <div class="inline">
                            <div id="search-employee" class="table-row">
                                <div><input type="text" placeholder="Tìm theo tên" /></div>
                                <div><span class="button small search"></span></div>
                            </div>
                            <span>
                                <select name="EmployeeID" data="@Url.Action("DataList", "Employee")" value="@Model.Filter.EmployeeID">
                                    <option value="">None</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div>
                        <label>Từ:</label>
                        <div class='input-group date'>
                            <input type='text' class="form-control input" name="From" value="@(Model.Filter.From.HasValue ? Model.Filter.From.Value.ToString(Constants.DateTimeString) : "")" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div>
                        <label>Đến:</label>
                        <div class='input-group date'>
                            <input type='text' class="form-control input" name="To" value="@(Model.Filter.To.HasValue ? Model.Filter.To.Value.ToString(Constants.DateTimeString) : "")" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="text-right">
                        <span id="revenue-download" class="button save">Thu nhập</span>
                        <span id="sale-download" class="button save">Doanh thu NV</span>
                        <input type="submit" value="Tìm" url="@Url.Action("Detail", "Report")" class="search" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="w75">
        <div class="tabs inline">
            <div id="heads">
                <span for="summary" class="active">Tổng quát</span>
                <span for="orders">Hóa đơn</span>
                <span for="incomes">Thu</span>
                <span for="outcomes">Chi</span>
                <span for="employees">Doanh thu NV</span>
            </div>
        </div>
        <div id="summary" class="tab-body">
            <div class="group">
                <h3 class="head-line">Toàn bộ</h3>
                @{
                    var total = Model.PaidOrders.Sum(i => i.Paid);
                    var price = Model.PaidOrders.Sum(i => i.Total);
                    var discount = Model.PaidOrders.Sum(i => i.Discount);
                    var income = Model.Incomes.Sum(i => i.Amount);
                    var outcome = Model.Outcomes.Sum(i => i.Amount);
                    var salary = Model.Salaries.Sum(i => i.CalculatedTotal);
                    var cash = Model.Incomes.Where(i => i.Type == InOutType.Cash).Sum(i => i.Amount) - Model.Outcomes.Where(i => i.Type == InOutType.Cash).Sum(i => i.Amount);
                    var card = Model.Incomes.Where(i => i.Type == InOutType.Card).Sum(i => i.Amount) - Model.Outcomes.Where(i => i.Type == InOutType.Card).Sum(i => i.Amount);
                    var transfer = Model.Incomes.Where(i => i.Type == InOutType.Transfer).Sum(i => i.Amount) - Model.Outcomes.Where(i => i.Type == InOutType.Transfer).Sum(i => i.Amount);
                    if (Model.Transactions != null)
                    {
                        cash += Model.Transactions.Where(i => i.Method == PayMethod.Cash).Sum(i => i.Amount);
                        card += Model.Transactions.Where(i => i.Method == PayMethod.Card).Sum(i => i.Amount);
                        transfer += Model.Transactions.Where(i => i.Method == PayMethod.BankTransfer).Sum(i => i.Amount);
                    }
                }
                <div class="flexible">
                    <div class="@(Model.Transactions != null ? "w25" : "w100")">
                        <div>
                            <label>Tổng tiền:</label><span class="info"><strong class="text-info">@((total + income - outcome).GetCurrencyString()) VND</strong></span>
                        </div>
                    </div>
                    @if (Model.Transactions != null)
                    {
                        <div class="w25">
                            <label>Tiền mặt:</label><span class="info"><strong class="text-info">@cash.GetCurrencyString() VND</strong></span>
                        </div>
                        <div class="w25">
                            <label>Thẻ:</label><span class="info"><strong class="text-info">@card.GetCurrencyString() VND</strong></span>
                        </div>
                        <div class="w25">
                            <label>Chuyển khoản:</label><span class="info"><strong class="text-info">@transfer.GetCurrencyString() VND</strong></span>
                        </div>
                    }
                    <div class="w33">
                        <div class="border">
                            <span id="title">Hóa đơn</span>
                            <div>
                                <label>Số hóa đơn:</label><span class="info">@Model.PaidOrders.Count().GetCurrencyString()</span>
                            </div>
                            <div>
                                <label>Số hóa đơn trả:</label><span class="info">@Model.PaidOrders.Where(i => i.Status == OrderStatus.Refunded).Count().GetCurrencyString()</span>
                            </div>
                            <div>
                                <label>Tổng tiền:</label><span class="info">@total.GetCurrencyString() VND</span>
                            </div>
                            <div>
                                <label>Tổng giảm giá:</label><span class="info">@discount.GetCurrencyString() VND (<strong class="text-danger">@(price > 0 ? Math.Round(discount / price * 100, 2) : 0)%</strong>)</span>
                            </div>
                        </div>
                    </div>
                    <div class="w66">
                        <div class="w50">
                            <div class="border">
                                <span id="title">Thu</span>
                                <div>
                                    <label>Số phiếu:</label><span class="info">@Model.Incomes.Count().GetCurrencyString()</span>
                                </div>
                                <div>
                                    <label>Tổng tiền:</label><span class="info">@income.GetCurrencyString() VND</span>
                                </div>
                            </div>
                        </div>
                        <div class="w50">
                            <div class="border">
                                <span id="title">Chi</span>
                                <div>
                                    <label>Số phiếu:</label><span class="info">@Model.Outcomes.Count().GetCurrencyString()</span>
                                </div>
                                <div>
                                    <label>Tổng tiền:</label><span class="info">@outcome.GetCurrencyString() VND</span>
                                </div>
                            </div>
                        </div>
                        <div class="w50">
                            <div class="border">
                                <span id="title">Lương</span>
                                <div>
                                    <label>Tổng tiền:</label><span class="info">@salary.GetCurrencyString() VND</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @foreach (var wh in Model.Warehouses)
            {
                var orders = Model.PaidOrders.Where(i => (Model.MainEmployeeID.HasValue ? i.EmployeeID == Model.MainEmployeeID : true) && i.WarehouseID == wh.ID);
                var transactions = Model.Transactions.Where(i => (Model.MainEmployeeID.HasValue ? i.EmployeeID == Model.MainEmployeeID : true) && i.OrderID.HasValue && orders.FirstOrDefault(o => o.ID == i.OrderID.Value) != null);
                var incomes = Model.Incomes.Where(i => (Model.MainEmployeeID.HasValue ? i.EmployeeID == Model.MainEmployeeID : true) && i.WarehouseID == wh.ID);
                var outcomes = Model.Outcomes.Where(i => (Model.MainEmployeeID.HasValue ? i.EmployeeID == Model.MainEmployeeID : true) && i.WarehouseID == wh.ID);
                var employees = Model.Employees.Where(i => i.WarehouseID == wh.ID);
                var salaries = Model.Salaries.Where(i => employees.FirstOrDefault(e => e.ID == i.EmployeeID) != null);
                total = orders.Sum(i => i.Paid);
                price = orders.Sum(i => i.Total);
                discount = orders.Sum(i => i.Discount);
                income = incomes.Sum(i => i.Amount);
                outcome = outcomes.Sum(i => i.Amount);
                salary = salaries.Sum(i => i.CalculatedTotal);
                cash = transactions.Where(i => i.Method == PayMethod.Cash).Sum(i => i.Amount) + incomes.Where(i => i.Type == InOutType.Cash).Sum(i => i.Amount) - outcomes.Where(i => i.Type == InOutType.Cash).Sum(i => i.Amount);
                card = transactions.Where(i => i.Method == PayMethod.Card).Sum(i => i.Amount) + incomes.Where(i => i.Type == InOutType.Card).Sum(i => i.Amount) - outcomes.Where(i => i.Type == InOutType.Card).Sum(i => i.Amount);
                transfer = transactions.Where(i => i.Method == PayMethod.BankTransfer).Sum(i => i.Amount) + incomes.Where(i => i.Type == InOutType.Transfer).Sum(i => i.Amount) - outcomes.Where(i => i.Type == InOutType.Transfer).Sum(i => i.Amount);
                <div class="group">
                    <h3 class="head-line">@(Model.MainEmployeeID.HasValue ? String.Format("{0} ({1})", Model.Employees.FirstOrDefault().Name, wh.Name) : wh.Name)</h3>
                    <div class="flexible">
                        <div class="w25">
                            <label>Tổng tiền:</label><span class="info"><strong class="text-info">@((total + income - outcome).GetCurrencyString()) VND</strong></span>
                        </div>
                        <div class="w25">
                            <label>Tiền mặt:</label><span class="info"><strong class="text-info">@cash.GetCurrencyString() VND</strong></span>
                        </div>
                        <div class="w25">
                            <label>Thẻ:</label><span class="info"><strong class="text-info">@card.GetCurrencyString() VND</strong></span>
                        </div>
                        <div class="w25">
                            <label>Chuyển khoản:</label><span class="info"><strong class="text-info">@transfer.GetCurrencyString() VND</strong></span>
                        </div>
                        <div class="w33">
                            <div class="border">
                                <span id="title">Hóa đơn</span>
                                <div>
                                    <label>Số hóa đơn:</label><span class="info">@orders.Count().GetCurrencyString()</span>
                                </div>
                                <div>
                                    <label>Số hóa đơn trả:</label><span class="info">@orders.Where(i => i.Status == OrderStatus.Refunded).Count().GetCurrencyString()</span>
                                </div>
                                <div>
                                    <label>Tổng tiền:</label><span class="info">@total.GetCurrencyString() VND</span>
                                </div>
                                <div>
                                    <label>Tổng giảm giá:</label><span class="info">@discount.GetCurrencyString() VND (<strong class="text-danger">@(price > 0 ? Math.Round(discount / price * 100, 2) : 0)%</strong>)</span>
                                </div>
                            </div>
                        </div>
                        <div class="w66">
                            <div class="w50">
                                <div class="border">
                                    <span id="title">Thu</span>
                                    <div>
                                        <label>Số phiếu:</label><span class="info">@incomes.Count().GetCurrencyString()</span>
                                    </div>
                                    <div>
                                        <label>Tổng tiền:</label><span class="info">@income.GetCurrencyString() VND</span>
                                    </div>
                                </div>
                            </div>
                            <div class="w50">
                                <div class="border">
                                    <span id="title">Chi</span>
                                    <div>
                                        <label>Số phiếu:</label><span class="info">@outcomes.Count().GetCurrencyString()</span>
                                    </div>
                                    <div>
                                        <label>Tổng tiền:</label><span class="info">@outcome.GetCurrencyString() VND</span>
                                    </div>
                                </div>
                            </div>
                            <div class="w50">
                                <div class="border">
                                    <span id="title">Lương</span>
                                    <div>
                                        <label>Tổng tiền:</label><span class="info">@salary.GetCurrencyString() VND</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div id="orders" class="tab-body hidden">
            @Html.Partial("Orders", Model.PaidOrders.Where(i => Model.MainEmployeeID.HasValue ? i.EmployeeID == Model.MainEmployeeID : true))
        </div>
        <div id="incomes" class="tab-body hidden">
            @Html.Partial("Incomes", Model.Incomes.Where(i => Model.MainEmployeeID.HasValue ? i.EmployeeID == Model.MainEmployeeID : true))
        </div>
        <div id="outcomes" class="tab-body hidden">
            @Html.Partial("Outcomes", Model.Outcomes.Where(i => Model.MainEmployeeID.HasValue ? i.EmployeeID == Model.MainEmployeeID : true))
        </div>
        <div id="employees" class="tab-body hidden">
            @foreach (var wh in Model.Employees.GroupBy(i => i.WarehouseID))
            {
                var id = Guid.NewGuid().ToString(); var scripts = new List<string>();
                var jsonData = Html.JsonSerialize(wh.ToArray());
                scripts.Add("_TableFunctions.Data.push({" + String.Format("id: '{0}',data: JSON.parse('{1}', _TableFunctions.JsonParse)", id, jsonData) + "});");
                <div class="border">
                    <span id="title">@wh.FirstOrDefault().WarehouseName</span>
                    <div class="tbl">
                        <table data="@id">
                            <thead>
                                <tr>
                                    <td name="Name"><div>Mã</div></td>
                                    <td name="OrderCountString" text="right"><div>Số hóa đơn</div></td>
                                    <td name="TotalString" text="right"><div>Tổng doanh thu</div></td>
                                    <td name="ReturnedCountString" text="right"><div>Số hóa đơn trả</div></td>
                                    <td name="ReturnedString" text="right"><div>Tổng tiền trả</div></td>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                @Html.Raw(String.Format("<script>{0}</script>", String.Join("", scripts)))
            }
        </div>
    </div>
</div>
<script>
    _TableFunctions.Init({ e: '#employees' });
    _TableFunctions.RefreshData();
    $('#revenue-download').on('click', function () {
        var formData = new FormData();
        $.each($('#filter form').serializeArray(), function (i, field) {
            //console.log(field.name + ', ' + field.value);
            formData.append(field.name, field.value);
        });
        AjaxRequest({
            url: '@Url.Action("RevenueDownload", "Report")',
            data: formData,
            type: 'post',
            processData: false,
            success: function (data) {
                if (data.result) {
                    window.location = '@Url.Action("Download", "Report")';
                }
            }
        });
    });
    $('#sale-download').on('click', function () {
        var formData = new FormData();
        $.each($('#filter form').serializeArray(), function (i, field) {
            //console.log(field.name + ', ' + field.value);
            formData.append(field.name, field.value);
        });
        AjaxRequest({
            url: '@Url.Action("SaleDownload", "Report")',
            data: formData,
            type: 'post',
            processData: false,
            success: function (data) {
                if (data.result) {
                    window.location = '@Url.Action("Download", "Report")';
                }
            }
        });
    });
    $('#filter #search-employee .button').on('click', function () {
        var name = $('#filter #search-employee input').val(),
            url = '@Url.Action("Find", "Employee", new { id = "_Name" })',
            val = $('#filter select[name="EmployeeID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (employee, index) {
                            html += '<option value="' + employee.ID + '" ' + (employee.ID.toString() == val ? 'selected' : '') + '>' + employee.Name + '</option>';
                        });
                        $('#filter select[name="EmployeeID"]').html(html);
                    }
                }
            });
        }
    });
</script>