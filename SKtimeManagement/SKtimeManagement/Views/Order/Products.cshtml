@model SKtimeManagement.ExportRecord
@{
    var items = Guid.NewGuid().ToString();
    var returnItems = Guid.NewGuid().ToString();
    bool update = ViewBag.Update ?? false;
}
<h3 class="text-center">Hóa đơn</h3>
@if (Model.ID > 0)
{
    <div class="flexible">
        <div class="w33">
            <div>
                <label>Mã hóa đơn:</label><span class="info">@Model.Code</span>
            </div>
            <div>
                <label>Kho hàng:</label><span class="info">@Model.WarehouseName</span>
            </div>
            <div>
                <label>NV bán hàng:</label><span class="info">@Model.EmployeeName</span>
            </div>
            <div>
                <label>Ngày tạo:</label><span class="info">@Model.SubmitDate.ToString(Constants.DateTimeString)</span>
            </div>
        </div>
        <div class="w33">
            <div>
                <label>Khách hàng:</label><span class="info">@(Model.ClientID.HasValue ? Model.ClientName : "Khách lẻ") @(Model.ClientID.HasValue ? String.Format("({0})", Model.ClientType) : "")</span>
            </div>
            <div>
                <label>Tổng tiền:</label><span class="info">@Model.Products.Sum(p => p.Price * p.Quantity).GetCurrencyString() VND</span>
            </div>
            <div>
                <label>Khuyến mãi:</label><span class="info">@Model.DiscountString VND</span>
            </div>
            <div>
                <label>Giao hàng:</label><span class="info">@Model.DeliveryName</span>
            </div>
        </div>
        <div class="w33">
            <div>
                <label>Số hóa đơn:</label><span class="info">@(String.IsNullOrEmpty(Model.Receipt) ? "chưa có" : Model.Receipt)</span>
            </div>
            <div>
                <label>Đã trả:</label><span id="paid" class="info">@Model.PaidString VND</span>
            </div>
            <div>
                <label>Trạng thái:</label><span class="info @(Model.PaidStatus == OrderStatus.Unpaid ? "text-danger" : "text-info")">@Model.PaidStatus</span>
            </div>
        </div>
        <div class="w100">
            <div>
                <label>Ghi chú:</label><span class="info">@Model.Note</span>
            </div>
            <div>
                <label></label>
                <span class="button print" onclick="Print('order-print')">In (đồng hồ)</span>
                <span class="button print" onclick="Print('order-print-glasses')">In (mắt kính)</span>
                <a href="@Url.Action("Update", "Order", new { id = Model.ID })" target="_self" class="button edit" for="main-content" ptitle="Hóa đơn">Cập nhật</a>
                <a href="@Url.Action("Exchange", "Order", new { id = Model.ID })" target="_self" class="button edit" for="main-content" ptitle="Hóa đơn">Đổi hàng</a>
                @*<a href="@Url.Action("Copy", "Order", new { id = Model.ID })" target="_self" class="button copy" for="main-content" ptitle="Hóa đơn">Sao chép</a>*@
                <span class="button remove" onclick="RemoveRecord()">Xóa</span>
                @if (String.IsNullOrEmpty(Model.ExportCode))
                {
                    @*<a href="@Url.Action("ExportOrder", "Order", new { id = Model.ID })" target="_self" class="button save" for="order-detail" ptitle="Hóa đơn" changeurl="false">Xuất kho</a>*@
                }
            </div>
        </div>
    </div>
}
<div class="tabs inline">
    <div id="heads">
        <span for="order-items" class="active">Hàng mua</span>
        <span for="order-return-item">Hàng trả</span>
        <span for="order-payment-list">Thanh toán</span>
    </div>
</div>
<div id="order-items" class="tab-body">
    <div class="tbl" style="margin-top: 0">
        <table data="@items">
            <thead>
                <tr>
                    <td name="Code"><div>Mã</div></td>
                    <td name="ProductUrl"><div>Tên</div></td>
                    <td name="Quantity" text="right"><div>Số lượng</div></td>
                    <td name="PriceString" text="right"><div>Giá</div></td>
                    <td name="Total" text="right"><div>Thành tiền</div></td>
                </tr>
            </thead>
        </table>
    </div>
</div>
<div id="order-return-item" class="tab-body hidden">
    <div class="tbl" style="margin-top: 0">
        <table data="@returnItems">
            <thead>
                <tr>
                    <td name="Code"><div>Mã</div></td>
                    <td name="ProductUrl"><div>Tên</div></td>
                    <td name="Quantity" text="right"><div>Số lượng</div></td>
                    <td name="PriceString" text="right"><div>Giá</div></td>
                    <td name="Total" text="right"><div>Thành tiền</div></td>
                </tr>
            </thead>
        </table>
    </div>
</div>
<div id="order-payment-list" class="tab-body hidden">
    <script>
        AjaxRequest({
            url: '@Url.Action("GetTransactions", "Order", new { id = Model.ID })',
            success: function (data) {
                if (data.html) {
                    $('#order-payment-list').html(data.html);
                    ProcessForms('#order-payment-list');
                    ProcessLinks('#order-payment-list');
                }
            }
        });
    </script>
</div>
@{
    var scripts = new List<string>();
    if (Model != null)
    {
        var jsonData = Html.JsonSerialize(Model.Products);
        scripts.Add("_TableFunctions.Data.push({" + String.Format("id: '{0}',data: JSON.parse('{1}', _TableFunctions.JsonParse)", items, jsonData) + "});");
        jsonData = Html.JsonSerialize(Model.ReturnProducts);
        scripts.Add("_TableFunctions.Data.push({" + String.Format("id: '{0}',data: JSON.parse('{1}', _TableFunctions.JsonParse)", returnItems, jsonData) + "});");
    }
}
@Html.Raw(String.Format("<script>{0}</script>", String.Join("", scripts)))
@if (Model.Products != null && Model.Products.Count > 0)
{
    <script>
        _TableFunctions.Init({
            e: '#order-detail'
        });
        _TableFunctions.RefreshData();
        function RemoveRecord() {
            _messageActive = true;
            $('#pop-up-content').html('<div><p>Bạn muốn xóa hóa đơn @Model.Code?</p><div class="text-right"><a class="button remove" for="main-content" ptitle="Nhập kho" changeurl="false" href="@Url.Action("Delete", "Order", new { id = Model.ID })">Xóa</a><span class="button cancel">Hủy</span></div></div>');
            $('#pop-up-content').find('span.cancel').on('click', function () {
                $('#pop-up').removeClass('active');
            });
            $('#pop-up').addClass('active');
            ProcessLinks('#pop-up-content');
        }
    </script>
}
@if (Model.ID > 0)
{
    <div id="order-print" class="hidden">
        @Html.Partial("Print", Model)
    </div>
    <div id="order-print-glasses" class="hidden">
        @Html.Partial("PrintWatch", Model)
    </div>
}