@model SKtimeManagement.Export

<div class="tabs">
    <div id="heads">
        <a href="@Url.Action("Create", "Import")" target="_self" for="main-content" ptitle="Nhập kho">Nhập kho</a>
        <a href="@Url.Action("Create", "Export")" target="_self" for="main-content" ptitle="Xuất kho">Xuất kho</a>
        <span class="active">Hóa đơn</span>
    </div>
</div>
<div id="order" class="flexible">
    <div id="selector" class="w25">
        <div class="group">
            <h3 class="head-line">Tìm sản phẩm</h3>
            <div id="content">
                <form action="@Url.Action("ProductList", "Order")" method="post" for="products" ptitle="Hóa đơn">
                    <input type="hidden" name="WarehouseID" value="@Model.WarehouseID" />
                    <input type="hidden" name="Action" value="@(Model.ID > 0 ? DbAction.Order.Modify : DbAction.Order.Create)" />
                    <div>
                        <label>Mã:</label><input class="input" type="text" name="Code" value="@Model.Filter.Code" />
                    </div>
                    <div>
                        <label>Tên:</label><input class="input" type="text" name="Name" value="@Model.Filter.Name" />
                    </div>
                    <div>
                        <label>Nhóm sản phẩm:</label>
                        <div class="inline">
                            <div id="search-tag" class="table-row">
                                <div><input type="text" placeholder="Tìm theo tên" /></div>
                                <div><span class="button small search"></span></div>
                            </div>
                            <span>
                                <select name="TagID" data="@Url.Action("KeyList", "Tag")" value="@Model.Filter.TagID">
                                    <option value="">None</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div class="text-right">
                        <input type="submit" value="Tìm" class="search" />
                        <a href="@Url.Action("Create", "Order" )" target="_self" class="button add" for="main-content" ptitle="Hóa đơn">Tạo mới</a>
                        <a href="@Url.Action("History", "Order" )" target="_self" class="button view" for="main-content" ptitle="Hóa đơn">Xem hóa đơn</a>
                    </div>
                </form>
            </div>
        </div>
        <div id="products" class="group">
            @Html.Partial(Views.Selector, Model.Data)
        </div>
    </div>
    <div class="w75">
        <div class="text-center">
            <h3>Hóa đơn</h3>
        </div>
        <div class="text-center @(Model.Result ? "text-info" : "text-danger")">
            <i id="order-message">@Html.Raw(Model.Message)</i>
        </div>
        <div id="list">
            <form action="@Url.Action("Submit", "Order")" method="post" ptitle="Xuất kho" for="main-content">
                <input type="hidden" name="ID" value="@Model.ID"/>
                <input type="hidden" name="Code" value="@Model.Code" />
                <input type="hidden" name="Export" value="@(Model.ToExport || Model.ID == 0 ? "on" : "")" />
                <input type="hidden" name="Return" value="@Model.Return.ToString()" />
                <input type="hidden" name="ReturnValue" value="@(Model.Return ? Model.Paid : 0)" />
                <div class="flexible">
                    @if (Model.ID > 0)
                    {
                        <div class="w100">
                            <div>
                                <label>Mã:</label><span class="info"><strong>@Model.Code</strong></span>
                            </div>
                        </div>
                    }
                    <div class="w50">
                        <div>
                            <label>Kho hàng:</label>
                            <span>
                                <select name="WarehouseID">
                                    @foreach (var warehouse in Model.Warehouses)
                                    {
                                        <option value="@warehouse.ID" @(Model.WarehouseID == warehouse.ID ? "selected" : "")>@warehouse.Name</option>
                                    }
                                </select>
                            </span>
                        </div>
                        @if (Model.Editable && Model.ID == 0)
                        {
                            <div>
                                <label>Ngày tạo:</label>
                                <div class="inline">
                                    <div class='input-group date'>
                                        <input type='text' class="form-control input" name="SubmitDate" value="@DateTime.Now.ToString(Constants.DateTimeString)" />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                        @*<div>
                            <label>Số hóa đơn:</label><input type="text" name="Receipt" value="@Model.OrderReceipt" />
                        </div>*@
                        @*<div>
                            <label>Thanh toán:</label>
                            <select name="PayMethod">
                                @foreach (var method in PayMethod.List)
                                {
                                    <option value="@method" @(Model.PayMethod == method ? "selected" : "")>@method</option>
                                }
                            </select>
                        </div>*@
                        @*<div>
                            <label>Nhập từ file:</label>
                            <input type="file" id="order-file" />
                        </div>
                        <div>
                            <label>File mẫu:</label>
                            <a href="@Url.Action("UploadTemplate", "Order")" target="_blank" class="button save">Tải về</a>
                        </div>*@
                        @*@if (Model.ID > 0)
                        {
                            <div>
                                <label>Trạng thái:</label>
                                <select name="Status">
                                    <option value="" @(Model.Status != OrderStatus.Refunded ? "selected" : "")>@OrderStatus.Normal</option>
                                    <option value="@OrderStatus.Refunded" @(Model.Status == OrderStatus.Refunded ? "selected" : "")>@OrderStatus.Refunded</option>
                                </select>
                            </div>
                        }*@
                        <div>
                            <label>Trục:</label>
                            <input class="input" type="text" name="GlassPole" value="@Model.GlassPole" maxlength="50" />
                        </div>
                        <div>
                            <label>PD:</label>
                            <input class="input" type="text" name="GlassPD" value="@Model.GlassPD" maxlength="50" />
                        </div>
                        <div>
                            <label>Ghi chú:</label>
                            <input class="input" type="text" name="Note" value="@Model.Note" maxlength="200" />
                        </div>
                    </div>
                    <div class="w50">
                        <div>
                            @if (Model.Editable)
                            {
                                <label>NV bán hàng:</label>
                                <div class="inline">
                                    <div id="search-employee" class="table-row">
                                        <div><input type="text" placeholder="Tìm theo tên" /></div>
                                        <div><span class="button small search"></span></div>
                                    </div>
                                    <select name="NewEmployeeID" data="@Url.Action("DataList", "Employee")" value="@Model.EmployeeID">
                                        <option value="0">None</option>
                                    </select>
                                </div>
                            }
                            else
                            {
                                <label>NV bán hàng:</label><span class="info">@Model.EmployeeName</span>
                            }
                        </div>
                        <div>
                            <label>ĐV giao hàng:</label>
                            <div class="inline">
                                <div id="search-delivery" class="table-row">
                                    <div><input type="text" placeholder="Tìm theo tên" /></div>
                                    <div><span class="button small search"></span></div>
                                </div>
                                <select name="DeliveryID" data="@Url.Action("KeyList", "Delivery")" value="@Model.DeliveryID">
                                    <option>None</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="border" id="order-client">
                    <span id="title">Khách hàng</span>
                    <input type="hidden" name="ClientID" value="@Model.ClientID" />
                    <div class="flexible">
                        <div class="w50">
                            <div>
                                <label>Mã: </label><input type="text" class="input" name="ClientCode" value="@Model.ClientCode" />
                            </div>
                            <div>
                                <label>Tên: </label><input type="text" class="input" name="ClientName" value="@Model.ClientName" />
                            </div>
                            <div>
                                <label>Số ĐT:</label><input type="text" class="input" name="ClientPhone" value="@Model.ClientPhone" />
                            </div>
                            <div>
                                <label>Địa chỉ:</label><input type="text" class="input" name="ClientAddress" value="@Model.ClientAddress" />
                            </div>
                            <div>
                                <label>Loại:</label><span id="client-type" class="info">@(String.IsNullOrEmpty(Model.ClientType) ? "Khách thường" : Model.ClientType)</span>
                            </div>
                        </div>
                        <div class="w50">
                            <div class="tbl">
                                <table>
                                    <thead>
                                        <tr id="head">
                                            <td width="50"></td>
                                            <td>Tên</td>
                                            <td>Số ĐT</td>
                                            <td>Địa chỉ</td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tabs inline">
                    <div id="heads">
                        <span for="order-product-list" class="active">Sản phẩm</span>
                        <span for="order-payment-list">Thanh toán</span>
                    </div>
                </div>
                <div id="order-product-list" class="tab-body">
                    <div class="tbl" style="margin-top: 0">
                        <table id="order-products">
                            <thead>
                                <tr id="head">
                                    <td width="50"></td>
                                    <td>Ảnh</td>
                                    <td>Mã SP</td>
                                    <td>Tên</td>
                                    <td>Tồn kho</td>
                                    <td>Số lượng</td>
                                    <td>Giá bán</td>
                                    <td>Điểm</td>
                                    <td width="150">Thành tiền (VND)</td>
                                </tr>
                            </thead>
                            <tbody></tbody>
                            <tfoot>
                                @if (Model.Return)
                                {
                                    <tr>
                                        <td colspan="8"><div class="text-right">Tổng giá trị hàng đổi:</div></td>
                                        <td><div class="text-right"><strong>@Model.Paid.GetCurrencyString()</strong></div></td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="8"><div class="text-right">Tổng cộng:</div></td>
                                    <td><div class="text-right"><strong id="grand-total">0</strong></div></td>
                                </tr>
                                <tr>
                                    <td colspan="8"><div class="text-right">Khuyến mãi:</div></td>
                                    <td>
                                        <div class="text-right input-number flexible">
                                            <div id="input">
                                                <input id="discount" class="text-right" type="number" name="Discount" min="0" value="@(Model.Return ? 0 : Model.Discount)" />
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="8"><div class="text-right">Đã trả:</div></td>
                                    @{ 
                                        var paid = Model.Return ? 0 : Model.Paid;
                                    }
                                    <td><div class="text-right"><strong id="paid">@paid.GetCurrencyString()</strong><input type="hidden" name="Paid" value="@paid"/></div></td>
                                    @*<td>
                                        <div class="text-right input-number flexible">
                                            <div id="input">
                                                <input id="paid" class="text-right" type="number" name="Paid" min="0" value="@(Model.Return ? 0 : Model.Paid)" />
                                            </div>
                                        </div>
                                    </td>*@
                                </tr>
                                <tr>
                                    <td colspan="8"><div class="text-right">Còn lại:</div></td>
                                    <td><div class="text-right"><strong id="remain">0</strong></div></td>
                                </tr>
                                @*<tr>
                        <td colspan="8"><div class="text-right">Tạo phiếu xuất kho:</div></td>
                        <td>
                            <div class="text-center"><input type="checkbox" name="Export" @(Model.ToExport || Model.ID == 0 ? "checked" : "") /></div>
                        </td>
                    </tr>*@
                            </tfoot>
                        </table>
                    </div>
                </div>
                <div id="order-payment-list" class="tab-body hidden">
                    <script>
                        AjaxRequest({
                            url: '@Url.Action("GetTransactions", "Order", new { id = Model.ID })',
                            success: function (data) {
                                if (data.html) {
                                    $('#order-payment-list').html(data.html);
                                    ProcessForms('#order-payment-list');
                                    ProcessLinks('#order-payment-list');
                                }
                            }
                        });
                    </script>
                </div>
                <div class="text-right">
                    <input type="submit" value="Lưu hóa đơn" class="save hidden" id="submit-order" />
                    <a href="@Url.Action("History", "Order")" target="_self" for="main-content" ptitle="Hóa đơn" class="button cancel">Hủy</a>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="order-data"></div>
<script>
    var _orderData = [];
    var _return = [];
    var _orderDiscount = {
        type: '@Model.DiscountType',
        value: @(Model.DiscountValue.HasValue ? Model.DiscountValue.Value : 0),
    };
    var _clientTimeOut;
    var _clientData = [];
    var _editable = @(Model.Editable ? "true" : "false");
    var _allowDept = @(Model.AllowDept ? "true" : "false");
    var _productUrl = '@Url.Action("Detail", "Product", new { ID = "_ID" })';
    NumberInput('#order-products');
    $('#order-client input[type="text"]').on('keyup', function () {
        if (_clientTimeOut)
            clearTimeout(_clientTimeOut);
        var input = $(this);
        _clientTimeOut = setTimeout(function () {
            var val = input.val(),
                prev = input.attr('prev');
            if (val != '' && prev != val)
                _FindClient();
            $('#order-client input[name="ClientID"]').val('');
            input.attr('prev', val);
        }, 200);
    });
    function _FindClientType(val) {
        var url = '@Url.Action("Discount", "Client", new { id = "_ID" })';
        $('#discount').val(0);
        $('[for="discount"]').html('0');
        if (val != '') {
            AjaxRequest({
                url: url.replace('_ID', val),
                success: function (data) {
                    if (data.type) {
                        _orderDiscount.type = data.type;
                        _orderDiscount.value = data.value;
                    }
                    GrandTotal();
                    //console.log('saved');
                }
            });
        }
    }
    function _FindClient() {
        $('#order-client input[name="ClientID"]').val('');
        var data = new FormData();
        data.append('code', $('#order-client input[name="ClientCode"]').val());
        data.append('name', $('#order-client input[name="ClientName"]').val());
        data.append('phone', $('#order-client input[name="ClientPhone"]').val());
        data.append('address', $('#order-client input[name="ClientAddress"]').val());
        AjaxRequest({
            url: '@Url.Action("Find", "Client")',
            type: 'post',
            data: data,
            processData: false,
            success: function (data) {
                if (data.list) {
                    _clientData = data.list;
                    var html = '';
                    _clientData.forEach(function (client, index) {
                        html += '<tr class="data">' +
                                '<td><div><span class="button-icon add" idx="' + index + '"></span></div></td>' +
                                '<td><div><span>' + client.Name + '</span></div></td>' +
                                '<td><div><span>' + client.Phone + '</span></div></td>' +
                                '<td><div><span>' + client.Address + '</span></div></td>' +
                                '</tr>';
                    });
                    $('#order-client table tbody').html(html);
                    $('#order-client table tbody span[idx]').on('click', function () {
                        var index = parseInt($(this).attr('idx')),
                            client = _clientData[index];
                        $('#order-client input[name="ClientID"]').val(client.ID);
                        $('#order-client input[name="ClientCode"]').val(client.Code);
                        $('#order-client input[name="ClientCode"]').attr('readonly', 'readonly');
                        $('#order-client input[name="ClientName"]').val(client.Name);
                        $('#order-client input[name="ClientName"]').attr('readonly', 'readonly');
                        $('#order-client input[name="ClientPhone"]').val(client.Phone);
                        $('#order-client input[name="ClientPhone"]').attr('readonly', 'readonly');
                        $('#order-client input[name="ClientAddress"]').val(client.Address);
                        $('#order-client input[name="ClientAddress"]').attr('readonly', 'readonly');
                        $('#order-client #client-type').html(client.Type);
                        _FindClientType(client.ID);
                    });
                }
                //console.log('saved');
            }
        });
    }
    function _RefreshOrderList(useInput) {
        $('#order-products tbody').html('');
        if (_return.length > 0) {
            _return.forEach(function (p, i) {
                var price = '<span>' + p.PriceString + '</span>';
                var point = '<span>' + p.PointString + '</span>';
                var image = p.Image && p.Image != '' ? '/Media/Product/' + p.Image : '/Content/Images/image-not-found.png';
                var name = '<a href="' + _productUrl.replace('_ID', p.ID) + '" target="_self" for="pop-up-content" changeurl="false" ptitle="Xuất kho">' + p.Name + '</a>';
                $('#order-products tbody').append(
                    '<tr class="data">' +
                    '<td><div></div></td>' +
                    '<td><span class="text-center" style="display: block"><img class="image" src="' + image + '" /></span></td>' +
                    '<td><div><span>' + p.Code + '</span></div></td>' +
                    '<td><div><span>' + name + '</span></div></td>' +
                    '<td><div text="right"><span>' + p.MaximumString + '</span></div></td>' +
                    '<td><div text="right"><span>' + p.QuantityString + '</span></div></td>' +
                    '<td><div text="right">' + price + '</div></td>' +
                    '<td><div text="right">' + point + '</div></td>' +
                    '<td><div text="right"><span>' + p.Total + '</span></div></td>' +
                    '</tr>'
                );
            });
        }
        if (_orderData.length > 0) {
            _orderData.forEach(function (p, i) {
                var price = _editable ?
                    '<div class="input-number flexible"><div id="input"><input dti="' + i + '" class="input text-right" type="number" name="items[' + i + '].Price" value="' + p.Price + '" min="0" /></div></div>' :
                    '<span>' + p.PriceString + '</span><input type="hidden" name="items[' + i + '].Price" value="' + p.Price + '" />';
                var point = _editable ?
                    '<div class="input-number flexible"><div id="input"><input dti="' + i + '" class="input text-right" type="number" name="items[' + i + '].Point" value="' + p.Point + '" min="0" /></div></div>':
                    '<span>' + p.PointString + '</span><input type="hidden" name="items[' + i + '].Point" value="' + p.Point + '" />';
                var image = p.Image && p.Image != '' ? '/Media/Product/' + p.Image : '/Content/Images/image-not-found.png';
                var name = '<a href="' + _productUrl.replace('_ID', p.ID) + '" target="_self" for="pop-up-content" changeurl="false" ptitle="Xuất kho">' + p.Name + '</a>';
                $('#order-products tbody').append(
                    '<tr class="data">' +
                    '<td><div><span class="button-icon remove" dti="' + i + '"></span><input type="hidden" name="items[' + i + '].ID" value="' + p.ID + '" /></div></td>' +
                    '<td><span class="text-center" style="display: block"><img class="image" src="' + image + '" /></span></td>' +
                    '<td><div><span id="code">' + p.Code + '</span><input type="hidden" name="items[' + i + '].Code" value="' + p.Code + '" /></div></td>' +
                    '<td><div><span id="name">' + name + '</span><input type="hidden" name="items[' + i + '].Name" value="' + p.Name + '" /></div></td>' +
                    '<td><div text="right"><span id="max">' + p.MaximumString + '</span><input type="hidden" name="items[' + i + '].Maximum" value="' + p.Maximum + '" /></div></td>' +
                    '<td><div text="right"><div class="input-number flexible"><div id="input"><input dti="' + i + '" class="input text-right" type="number" name="items[' + i + '].Quantity" value="' + p.Quantity + '" min="0" max="' + p.Maximum + '" /></div></div></div></td>' +
                    '<td><div text="right">' + price + '</div></td>' +
                    '<td><div text="right">' + point + '</div></td>' +
                    '<td><div text="right"><span id="total-' + i + '">' + p.Total + '</span></div></td>' +
                    '</tr>'
                );
            });
            NumberInput('#order-products tbody');
            ProcessLinks('#order-products tbody');
            $('#order-products tbody .remove').on('click', function () {
                var index = $(this).attr('dti');
                if (index) {
                    index = parseInt(index);
                    _orderData.splice(index, 1);
                    _RefreshOrderList();
                    ProcessSelects('#order-products tbody');
                }
            });
            $('#order-products tbody input[name]').on('change', _RefreshOrderItem);
        }
        GrandTotal(useInput);
    }
    function _RefreshOrderItem() {
        var index = $(this).attr('dti');
        if (index) {
            index = parseInt(index);
            var wid = $('#order-products select[name="items[' + index + '].WarehouseID"]').val(),
                price = $('#order-products input[name="items[' + index + '].Price"]').val(),
                qty = $('#order-products input[name="items[' + index + '].Quantity"]').val();
            if (wid) {
                _orderData[index].WarehouseID = parseInt(wid);
            }
            if (price) {
                _orderData[index].Price = parseFloat(price);
            }
            if (qty) {
                _orderData[index].Quantity = parseInt(qty);
            }
            _orderData[index].Total = parseInt(parseFloat(price) * parseInt(qty));
            $('#order-products #total-' + index).html(GetCurrencyString(_orderData[index].Total));
            GrandTotal();
        }
    }
    function GrandTotal(useInput) {
        var _returnValue = @(Model.Return ? Model.Paid : 0);
        var total = 0;
        _orderData.forEach(function (item, index) {
            total += item.Price * item.Quantity;
        });
        var discount = 0;
        if (useInput || _orderDiscount.type == '') {
            discount = parseFloat($('#order-products #discount').val());
        }
        else {
            switch (_orderDiscount.type) {
                case 'Percentage':
                    discount = total * _orderDiscount.value / 100;
                    break;
                case 'Value':
                    discount = _orderDiscount.value;
                    break;
                default: break;
            }
            discount = Math.round(discount / 1000) * 1000;
        }
        if (discount > total) {
            discount = total;
            $('#discount').val(discount);
            $('[for="discount"]').html(GetCurrencyString(discount));
        }
        else if (!useInput) {
            $('#discount').val(discount);
            $('[for="discount"]').html(GetCurrencyString(discount));
        }
        var paid = parseInt($('#order-products input[name="Paid"]').val()),
            remain = total - discount - paid;
        $('#order-products #remain').html(GetCurrencyString(remain));
        $('#order-products #grand-total').html(GetCurrencyString(total));
        if (_allowDept ||(((_returnValue == 0 && total > 0) || (_returnValue > 0 && total >= 0 && _returnValue <= total)) && remain == 0)) {
            $('#order #list #submit-order').removeClass('hidden');
        }
        else {
            $('#order #list #submit-order').addClass('hidden');
        }
    }
    $('#discount').on('change', function () {
        GrandTotal(true);
    });
    $('#order-products input[name="Paid"]').on('change', function () {
        GrandTotal(true);
    });
    $('#order-file').on('change', function () {
        var files = this.files;
        for (var i = 0; i < files.length; i++) {
            var data = new FormData();
            data.append(files[i].name, files[i]);
            AjaxRequest({
                url: '@Url.Action("UploadFile", "Order")',
                type: 'post',
                data: data,
                processData: false,
                success: function (data) {
                    if (data.list) {
                        data.list.forEach(function (item, index) {
                            _orderData.push(item);
                        });
                        _RefreshOrderList();
                        ProcessSelects('#order-products tbody');
                    }
                    if (data.message != '') {
                        $('#order-message').attr('class', '');
                        $('#order-message').attr('class', data.result ? 'text-info' : 'text-danger');
                        $('#order-message').html(data.message);
                    }
                    //console.log('saved');
                },
                uploadProgress: function (progress) {
                    //console.log(progress);
                }
            });
        }
        $(this).val('');
    });
    $('#order #selector #search-tag .button').on('click', function () {
        var name = $('#order #selector #search-tag input').val(),
            url = '@Url.Action("Find", "Tag", new { id = "_Name" })',
            val = $('#order #selector select[name="TagID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (item, index) {
                            html += '<option value="' + item.ID + '" ' + (item.ID.toString() == val ? 'selected' : '') + '>' + item.Name + '</option>';
                        });
                        $('#order #selector select[name="TagID"]').html(html);
                    }
                }
            });
        }
    });
    $('#search-employee .button').on('click', function () {
        var name = $('#search-employee input').val(),
            url = '@Url.Action("Find", "Employee", new { id = "_Name" })',
            val = $('#order #list select[name="EmployeeID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (employee, index) {
                            html += '<option value="' + employee.ID + '" ' + (employee.ID.toString() == val ? 'selected' : '') + '>' + employee.Name + '</option>';
                        });
                        $('#order #list select[name="EmployeeID"]').html(html);
                    }
                }
            });
        }
    });
    $('#search-delivery .button').on('click', function () {
        var name = $('#search-delivery input').val(),
            url = '@Url.Action("Find", "Delivery", new { id = "_Name" })',
            val = $('#order #list select[name="DeliveryID"]').attr('value');
        if (name != '') {
            AjaxRequest({
                url: url.replace('_Name', name),
                success: function (data) {
                    if (data.list) {
                        var html = '<option value="">None</option>';
                        data.list.forEach(function (employee, index) {
                            html += '<option value="' + employee.ID + '" ' + (employee.ID.toString() == val ? 'selected' : '') + '>' + employee.Name + '</option>';
                        });
                        $('#order #list select[name="DeliveryID"]').html(html);
                    }
                }
            });
        }
    });
    $('#order #list select[name="WarehouseID"]').on('change', function () {
        $('#order #selector input[name="WarehouseID"]').val($(this).val());
        _orderData = [];
        _RefreshOrderList();
        $('#order #selector #products .tbl').remove();
    });
</script>
@{
    var script = "";
    if (Model != null)
    {
        script = String.Format("<script>{0}{1}_RefreshOrderList(true);</script>",
            String.Join("", Model.Selected.Where(i => !i.Return).Select(i => String.Format("_orderData.push({0});", i.JsObject))),
            String.Join("", Model.Selected.Where(i => i.Return).Select(i => String.Format("_return.push({0});", i.JsObject)))
        );
    }
}
@Html.Raw(script)